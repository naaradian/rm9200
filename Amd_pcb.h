
const int no_ready=0x0004;
const int disable_addr=0x0080;
const int psram=0x0040;
const int mem=0x0040;
const int io=0;
const int extA1=0x0040;

const int Usize64= 0xf038;
const int Usize128=0xe038;
const int Usize256=0xc038;
const int Usize512=0x8038;

const int Lsize64= 0x0f38;
const int Lsize128=0x1f38;
const int Lsize256=0x3f38;
const int Lsize512=0x7f38;

const int MbaseAddr=  0x11f8;
const int Msize2=  0x8138;
const int Msize4=  0x8238;
const int Msize8=  0x8438;
const int Msize16= 0x8838;
const int Msize32= 0x9038;
const int Msize64= 0xa038;
const int Msize128=0xc038;

const int PbaseAddr=  0x0070;

const int relreg= 0xfffe; // default 0x20ff
const int rescon= 0xfff6; // default 0x0000
const int prl=    0xfff4; // default 0x0000
const int auxcon= 0xfff2; // default 0x0000
const int syscon= 0xfff0; // default 0x0000
//const int pdcon=  0xfff0; // default 0x0000
const int wdtcon= 0xffe6; // default 0xc080
const int edram=  0xffe4; // default 0x0000
const int cdram=  0xffe2; // default 0x0000
const int mdram=  0xffe0; // default 0x0000

// DMA Control Regisrers
const int dma0cnt= 0xffca; // DMA 0 Control
const int dma0tc=  0xffc8; // DMA 0 transfer count
const int dma0dsth=0xffc6; // DMA 0 destination addr high
const int dma0dstl=0xffc4; // DMA 0 destination addr low
const int dma0srth=0xffc2; // DMA 0 source addr high
const int dma0srtl=0xffc0; // DMA 0 source addr low
const int dma1cnt= 0xffda; // DMA 1 Control
const int dma1tc=  0xffd8; // DMA 1 transfer count
const int dma1dsth=0xffd6; // DMA 1 destination addr high
const int dma1dstl=0xffd4; // DMA 1 destination addr low
const int dma1srth=0xffd2; // DMA 1 source addr high
const int dma1srtl=0xffd0; // DMA 1 source addr low

// Chip Select Control Registers
const int umcs=   0xffa0; // default 0xf0b
const int lmcs=   0xffa2; // default undefined
const int mmcs=   0xffa6; // default undefined
const int mpcs=   0xffa8; // default undefined
const int pacs=   0xffa4; // default undefined

// Interrupt Controller Registers
const int i0con=  0xff38; // INT0 Interrupt Control
const int i1con=  0xff3a; // INT1 Interrupt Control
const int i2con=  0xff3c; // INT2 Interrupt Control
const int i3con=  0xff3e; // INT3 Interrupt Control
const int i4con=  0xff40; // INT4 Interrupt Control
const int dma0con=0xff34; // DMA0 / INT5 Interrupt Control
const int dma1con=0xff36; // DMA1 / INT6 Interrupt Control

const int s0con=  0x605;   // RS485 control
const int s1con=  0xff44; // Interrupt Control
const int wdcon=  0xff42; // Interrupt Control
const int tcucon= 0xff32; // Timer Interrupt Control

const int intsts= 0xff30;  // Interrupt Status
const int reqst=  0xff2e;  // Interrupt Request
const int insrv=  0xff2c;  // In-Service
const int primask=0xff2a;  // Priority Mask
const int imask=  0xff28;  // Interrupt Mask
const int pollst= 0xff26;  // Poll Status
const int poll=   0xff24;  // Poll
const int eoi=    0xff22;  // End of Interrupt

//Timer/Counter Unit
const int t0cnt=  0xff50; //T0 Count
const int t0cmpa= 0xff52; //T0 Compare A
const int t0cmpb= 0xff54; //T0 Compare B
const int t0con=  0xff56; //T0 Control

const int t1cnt=  0xff58; //T1 Count
const int t1cmpa= 0xff5a; //T1 Compare A
const int t1cmpb= 0xff5c; //T1 Compare B
const int t1con=  0xff5e; //T1 Control

const int t2cnt=  0xff60; //T2 Count
const int t2cmpa= 0xff62; //T2 Compare A
const int t2con=  0xff66; //T2 Control

// Asinchronous Serial Port Rerister
//const int s0cnt=  0xff80;  //Chennel 0 Control
//const int s0sts=  0xff82;  //Chennel 0 Status
//const int s0tbuf= 0xff84;  //Chennel 0 Transmit Buffer
//const int s0rbuf= 0xff86;  //Chennel 0 Receive Buffer
//const int s0baud= 0xff88;  //Channel 0 Baund Rate Divisor

const int s1cnt=  0xff80;  //UART Control
const int s1sts=  0xff82;  //UART Status
const int s1tbuf= 0xff84;  //UART Transmit Buffer
const int s1rbuf= 0xff86;  //UART Receive Buffer
const int s1baud= 0xff88;  //UART Baund Rate Divisor

const int piomod0=0xff70;  // PIO mode 0 register
const int piodir0=0xff72;  // PIO dirction 0 register
const int piodat0=0xff74;  // PIO data 0 register
const int piomod1=0xff76;  // PIO mode 1 register
const int piodir1=0xff78;  // PIO dirction 1 register
const int piodat1=0xff7a;  // PIO data 1 register

// Interrupt Table

#define dee_vect   0x00
#define trace_vect 0x04
#define nmi_vect   0x08
#define break_vect 0x0c
#define abe_vect   0x14

#define timer0vect 0x20
#define timer1vect 0x48
#define timer2vect 0x4c
#define int0vect   0x30
#define int1vect   0x34
#define int2vect   0x38
#define int3vect   0x3c
#define int4vect   0x40
#define dma0vect   0x28
#define dma1vect   0x2c
#define serial1vect 0x44
#define wdtvect 0x42

#define sMode 0x90
#define sTxie 0x0800
#define sRxie 0x0400
#define sTxen 4
#define sRxen 1
#define sReceive   6
#define sTransmit  4
#define sStatus    2
//#define even   0x0010
//#define parity 0x0004
//#define tb8    0x0400

union wword{
	unsigned char c[2];
	unsigned int i;
};

const int PointNumCurr=0x0;
const int DeviceNumCurr=0x01;

unsigned char ascii[]={
0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD5,0xDA,
0x20,0x20,0x32,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
//
0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,
0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x20,
//
0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,
0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x20,0x5d,0x5e,0x20,
//
0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,
0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0x7e,0x7f,
//
//
0x20,0x20,0x27,0x20,0xca,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
0x20,0x20,0x20,0xca,0xcb,0xdf,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
//
0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xfd,0xa2,0x20,0x20,0xc8,0x20,0x2d,0x20,0x20,
0x20,0x20,0x20,0x20,0x20,0x20,0xfe,0xdf,0xb5,0x20,0x20,0xc9,0x20,0x20,0x20,0x20,
//
0x41,0xa0,0x42,0xa1,0xe0,0x45,0xa3,0xa4,0xa5,0xa6,0x4b,0xa7,0x4d,0x48,0x4f,0xa8,
0x50,0x43,0x54,0xa9,0xaa,0x58,0xe1,0xab,0xac,0xe2,0xad,0xae,0x62,0xaf,0xb0,0xb1,
//
0x61,0xb2,0xb3,0xb4,0xe3,0x65,0xb6,0xb7,0xb8,0xb9,0xba,0xbb,0xbc,0xbd,0x6f,0xbe,
0x70,0x63,0xbf,0x79,0xe4,0x78,0xe5,0xc0,0xc1,0xe6,0xc2,0xc4,0x62,0xc5,0xc6,0xc7
};